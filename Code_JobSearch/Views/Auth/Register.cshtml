
@{
    ViewBag.Title = "Đăng Ký";
    Layout = "~/Views/Shared/Reg_log_user.cshtml";
}
<style>
    .custom-input-group {
        margin-bottom: 15px;
    }

    .error-message {
        color: red;
        text-align: left;
    }

    .btn-register {
        width: 100%;
    }
    /* CSS cho dialog loading */
    .loading-overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        z-index: 1000;
        justify-content: center;
        align-items: center;
    }

    .loading-message {
        background: #fff;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .loading-icon {
        font-size: 30px;
        transition: transform 0.1s linear;
        color: #00B074;
    }
</style>
<div class="loading-overlay" id="loadingOverlay">
    <div class="loading-message">
        <i class="fas fa-spinner loading-icon" id="loadingIcon"></i>
        <p>
            Đang chuyển trang xác thực mã đăng ký.
            <br />Hãy vui lòng kiểm tra email để nhận mã xác thực để đăng ký.
        </p>
    </div>
</div>
<div class="container centered-form">
    <div class="row">
        <div class="col-md-6 order-last" id="jobStarSection" style="padding:20px; position: relative;">

            <h2 style="color:green; position: relative; z-index: 1;">Giới thiệu về JobStar</h2>
            <p style="position: relative; z-index: 1;">JobStar là một nền tảng tìm việc làm hàng đầu, kết nối nhà tuyển dụng với ứng viên tiềm năng. Chúng tôi cung cấp các công cụ mạnh mẽ để bạn xây dựng hồ sơ cá nhân ấn tượng và tìm kiếm các cơ hội sự nghiệp lý tưởng.</p>
            <p style="position: relative; z-index: 1;">Hãy tham gia cùng chúng tôi và khám phá những cơ hội sự nghiệp mới!</p>

            <img src="~/Content/img/backgroud.png" alt="JobStar" class="img-fluid mt-3" style="position: absolute; top: -16px; left: 0; width: 100%; height: 100%; z-index: 0;">

            <p class="mt-3" style="position: relative; z-index: 1;">Liên hệ: support@jobstar.com</p>
        </div>





        <div class="col-md-6" style="padding-left: 0px; padding-right: 24px; margin-top: 20px;">
            <h2 style="color:green">Chào mừng bạn đến với JobStar</h2>
            <p>Cùng xây dựng một hồ sơ nổi bật và nhận được các cơ hội sự nghiệp lý tưởng</p>
            @using (Html.BeginForm("Register", "Auth", FormMethod.Post, new { id = "myForm" }))
            {
                @Html.ValidationSummary(true)

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label for="HotenKH" class="form-label"><i class="fa fa-user"></i> Họ Tên Khách Hàng</label>
                        @Html.TextBox("HotenKH", ViewData["HotenKH"], new { @class = "form-control", type = "text", placeholder = "Nguyễn Văn A" })
                        <h7 class="error-message">@ViewData["Loi"]</h7>
                    </div>
                    <div class="col-md-6">
                        <label for="Email" class="form-label"><i class="fa fa-envelope"></i> Email</label>
                        @Html.TextBox("Email", ViewData["Email"], new { @class = "form-control", type = "email", placeholder = "example@gmail.com" })
                        <h7 class="error-message">@ViewData["Loi3"]</h7>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label for="TenDN" class="form-label"><i class="fa fa-user"></i> Tên Đăng Nhập</label>
                        @Html.TextBox("TenDN", ViewData["TenDN"], new { @class = "form-control", type = "text", placeholder = "Nhập tên đăng nhập của bạn" })
                        <h7 class="error-message">@ViewData["Loi2"]</h7>
                    </div>
                    <div class="col-md-6">
                        <label for="SDT" class="form-label"><i class="fa fa-phone"></i> Số Điện Thoại</label>
                        @Html.TextBox("SDT", ViewData["SDT"], new { @class = "form-control", type = "tel", placeholder = "Nhập số điện thoại của bạn", oninput = "this.value = this.value.replace(/[^0-9]/g, '')" })
                        <h7 class="error-message">@ViewData["Loi5"]</h7>
                    </div>
                </div>

                <div class="row mb-3">
                    @*code update*@
                    <div class="col-md-6">
                        <label for="Matkhau" class="form-label"><i class="fa fa-lock"></i> Mật Khẩu</label>
                        @Html.Password("Matkhau", "", new { @class = "form-control", type = "password", placeholder = "Nhập Mật Khẩu" })
                        <button class="btn btn-outline-success" type="button" id="togglePasswordVisibility" onmouseover="showPasswordIcon()" onmouseout="hidePasswordIcon()">
                            <i id="eyeIcon" class="bi bi-eye-slash"></i>
                        </button>
                        <h7 class="error-message">@ViewData["Loi4"]</h7>
                    </div>

                    <div class="col-md-6">
                        <label for="ReMatkhau" class="form-label"><i class="fa fa-lock"></i> Nhập Lại Mật Khẩu</label>
                        @Html.Password("ReMatkhau", "", new { @class = "form-control", type = "password", placeholder = "Nhập Lại Mật Khẩu" })
                        <button class="btn btn-outline-success" type="button" id="togglePasswordVisibility" onmouseover="showPasswordIconRe()" onmouseout="hidePasswordIconRe()">
                            <i id="eyeIcon" class="bi bi-eye-slash"></i>
                        </button>
                        <h7 class="error-message">@ViewData["Loi1"]</h7>
                    </div>


                    @*--------------------*@
                </div>


                <div class="row">
                    <div class="col-sm-12">
                        <div class="input-group mb-0">
                            <input type="submit" value="Đăng ký" class="btn btn-success btn-register" />
                        </div>
                    </div>
                </div>

                <div class="row" style="padding-top:12px">
                    <div class="col-sm-12">
                        <div class="input-group mb-0">
                            <center>
                                <h7>Bạn chưa có tài khoản</h7>
                                &nbsp;
                                <h7>@Html.ActionLink("Đã có tài khoản", "Login", null, new { style = "color: green;" })</h7>
                            </center>
                        </div>
                    </div>
                </div>
            }

            @if (TempData["ErrorEmailMessageRegister"] != null)
            {
                <div class="alert alert-danger" role="alert">
                    @TempData["ErrorEmailMessageRegister"]
                </div>
            }
            @*code update*@
            @if (TempData["SuccessMessageRegister"] != null)
            {
                <div class="alert alert-success" role="alert">
                    @TempData["SuccessMessageRegister"]
                </div>
                <script>
                        // Hiển thị dialog loading và chuyển trang sau một khoảng thời gian
                        document.addEventListener("DOMContentLoaded", function () {
                            showLoading();
                            setTimeout(function () {
                                window.location.href = '@Url.Action("RegisterCodeVerify", "Auth")';
                            }, 3000); // Chuyển trang sau 3 giây
                        });
                </script>
            }
            @*-----*@
            </br>
            <p>Yêu cầu tạo một mật khẩu mạnh</p>
            <div id="password-conditions">
                <p id="min-length" style="color: red;">Mật khẩu tối thiểu 8 ký tự</p>
                <p id="lowercase" style="color: red;">Ít nhất một ký tự thường (a-z)</p>
                <p id="uppercase" style="color: red;">Ít nhất một ký tự hoa (A-Z)</p>
                <p id="number" style="color: red;">Ít nhất một số (0-9)</p>
                <p id="special-char" style="color: red;">Ít nhất một ký tự đặc biệt</p>
            </div>
        </div>




    </div>

</div>

<script>
    function hideOnMobile() {
        var jobStarSection = document.getElementById('jobStarSection');
        if (window.innerWidth < 768) {
            jobStarSection.style.display = 'none';
        } else {
            jobStarSection.style.display = 'block';
        }
    }
     /*code update*/
    let angle = 0;
    const loadingIcon = document.getElementById('loadingIcon');
    setInterval(() => {
        angle = (angle + 36) % 360; // Thay đổi giá trị này để điều chỉnh tốc độ xoay
        loadingIcon.style.transform = `rotate(${angle}deg)`;
    }, 100);

    function showLoading() {
        document.getElementById('loadingOverlay').style.display = 'flex';
    }
    var successMessage = '@TempData["SuccessMessageRegister"]';
    if (successMessage === '') {
        hideLoading(); // Ẩn loading nếu không có thông báo thành công
    }

    function hideLoading() {
        document.getElementById('loadingOverlay').style.display = 'none';
    }
    /*-----*/
    window.addEventListener('load', hideOnMobile);
    window.addEventListener('resize', hideOnMobile);
    // Function to show password conditions
    function showPasswordConditions() {
        var passwordInput = document.getElementById("Matkhau");
        var conditionsDiv = document.getElementById("password-conditions");

        // Get password value
        var password = passwordInput.value;

        // Check conditions
        var isPasswordValid = true;

        // Check each condition and update color accordingly
        var minLengthCondition = document.getElementById("min-length");
        if (password.length >= 8) {
            minLengthCondition.style.color = "green";
        } else {
            minLengthCondition.style.color = "red";
            isPasswordValid = false;
        }

        var lowercaseCondition = document.getElementById("lowercase");
        if (/[a-z]/.test(password)) {
            lowercaseCondition.style.color = "green";
        } else {
            lowercaseCondition.style.color = "red";
            isPasswordValid = false;
        }

        var uppercaseCondition = document.getElementById("uppercase");
        if (/[A-Z]/.test(password)) {
            uppercaseCondition.style.color = "green";
        } else {
            uppercaseCondition.style.color = "red";
            isPasswordValid = false;
        }

        var numberCondition = document.getElementById("number");
        if (/\d/.test(password)) {
            numberCondition.style.color = "green";
        } else {
            numberCondition.style.color = "red";
            isPasswordValid = false;
        }

        var specialCharCondition = document.getElementById("special-char");
        if (/[!@@#$%^&*(),.?":{}|<>]/.test(password)) {
            specialCharCondition.style.color = "green";
        } else {
            specialCharCondition.style.color = "red";
            isPasswordValid = false;
        }

        // Return overall password validity
        return isPasswordValid;
    }
// code update
    function showPassword() {
        var passwordInput = document.getElementById('Matkhau');
        passwordInput.setAttribute('type', 'text');
    }

    function hidePassword() {
        var passwordInput = document.getElementById('Matkhau');
        passwordInput.setAttribute('type', 'password');
    }

    function showRePassword() {
        var passwordInput = document.getElementById('ReMatkhau');
        passwordInput.setAttribute('type', 'text');
    }

    function hideRePassword() {
        var passwordInput = document.getElementById('ReMatkhau');
        passwordInput.setAttribute('type', 'password');
    }

    function showPasswordIcon() {
        var eyeIcon = document.getElementById('eyeIcon');
        eyeIcon.classList.remove('bi-eye-slash');
        eyeIcon.classList.add('bi-eye');
        showPassword();
    }

    function hidePasswordIcon() {
        var eyeIcon = document.getElementById('eyeIcon');
        eyeIcon.classList.remove('bi-eye');
        eyeIcon.classList.add('bi-eye-slash');
        hidePassword();
    }

    function showPasswordIconRe() {
        var eyeIcon = document.getElementById('eyeIcon');
        eyeIcon.classList.remove('bi-eye-slash');
        eyeIcon.classList.add('bi-eye');
        showRePassword();
    }

    function hidePasswordIconRe() {
        var eyeIcon = document.getElementById('eyeIcon');
        eyeIcon.classList.remove('bi-eye');
        eyeIcon.classList.add('bi-eye-slash');
        hideRePassword();
    }
//-----

// Add event listener to password input
document.addEventListener("DOMContentLoaded", function () {
    var passwordInput = document.getElementById("Matkhau");
    passwordInput.addEventListener("input", showPasswordConditions);
});

// Call showPasswordConditions on page load
showPasswordConditions();

</script>

