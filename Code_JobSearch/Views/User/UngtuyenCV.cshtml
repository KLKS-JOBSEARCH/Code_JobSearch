@model Code_JobSearch.Models.UngtuyenViewmodel
@{
    ViewBag.Title = "Ứng tuyển CV";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<p></p>
@using (Html.BeginForm("UngtuyenCV", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model.TinTuyenDung.Id_TTD)
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="container mt-4">
        <!-- Vùng Chọn hồ sơ xin việc hoặc tải lên CV mới -->
        <div class="card mb-3">
            <div class="card-header bg-primary text-white">
                <h5>Chọn cách ứng tuyển</h5>
            </div>
            <div class="card-body">
                <div class="form-group">
                    <label for="SelectionMethod">Phương thức ứng tuyển:</label>
                    <select id="SelectionMethod" class="form-control">
                        <option value="upload">Tải lên CV mới</option>
                        <option value="select">Chọn hồ sơ xin việc</option>
                    </select>
                </div>
            </div>
        </div>

        <!-- Vùng Tải lên CV mới (mặc định hiển thị) -->
        <div class="card mb-3" id="uploadCVSection">
            <div class="card-header bg-success text-white">
                <h5>Tải lên CV mới</h5>
            </div>
            <div class="card-body">
                <div class="form-group row">
                    <div class="col">
                        <label for="HoTenUV_TD">Họ và tên:</label>
                        @Html.TextBoxFor(model => model.UngVien.HoTen_TKUV, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="col">
                        <label for="EmailUV_TD">Email:</label>
                        @Html.TextBoxFor(model => model.UngVien.Email_TKUV, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="col">
                        <label for="SoDienThoaiUV_TD">Số điện thoại:</label>
                        @Html.TextBoxFor(model => model.UngVien.SoDienThoai_TKUV, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
                <div class="form-group">
                    <label for="File_CV">Tải lên CV mới:</label>
                    <input type="file" name="File_CV" class="form-control" id="File_CV" />
                </div>
            </div>
        </div>

        <!-- Vùng Chọn hồ sơ xin việc (mặc định ẩn) -->
        <div class="card mb-3" id="selectHoSoSection" style="display:none;">
            <div class="card-header bg-info text-white">
                <h5>Chọn hồ sơ xin việc</h5>
            </div>
            <div class="card-body">
                <div class="form-group">
                    <label for="SelectedHoSoId">Chọn hồ sơ xin việc:</label>
                    @if (Model.HoSoXinViecList != null && Model.HoSoXinViecList.Count > 0)
                    {
                        @Html.DropDownListFor(model => model.SelectedHoSoId, new SelectList(Model.HoSoXinViecList, "Id_HSXV", "Ten_HSXV"), "Chọn hồ sơ", new { @class = "form-control", id = "SelectedHoSoId" })
                    }
                    else
                    {
                        <p>Không có hồ sơ xin việc để chọn.</p>
                    }
                </div>
            </div>
        </div>

        <!-- Vùng Nội dung thư giới thiệu -->
        <div class="card mb-3">
            <div class="card-header bg-info text-white">
                <h5>Nội dung thư giới thiệu</h5>
            </div>
            <div class="card-body">
                <div class="form-group">
                    <label for="NoiDung_ThuGioiThieu">Nội dung thư giới thiệu:</label>
                    @Html.TextAreaFor(model => model.NoiDung_ThuGioiThieu, new { @class = "form-control", rows = 5, id = "NoiDung_ThuGioiThieu" })
                </div>
            </div>
        </div>

        <!-- Nút gửi -->
        <div class="form-group">
            <input type="submit" value="Ứng tuyển" class="btn btn-primary" />
        </div>
    </div>
}

<script>
    document.getElementById("SelectionMethod").addEventListener("change", function () {
        var selectedMethod = this.value;
        var uploadCVSection = document.getElementById("uploadCVSection");
        var selectHoSoSection = document.getElementById("selectHoSoSection");

        if (selectedMethod === "upload") {
            uploadCVSection.style.display = "block";
            selectHoSoSection.style.display = "none";
        } else if (selectedMethod === "select") {
            uploadCVSection.style.display = "none";
            selectHoSoSection.style.display = "block";
        }
    });

    // Set initial state based on selected method (useful for validation reloads)
    document.addEventListener("DOMContentLoaded", function () {
        var selectedMethod = document.getElementById("SelectionMethod").value;
        if (selectedMethod === "upload") {
            document.getElementById("uploadCVSection").style.display = "block";
            document.getElementById("selectHoSoSection").style.display = "none";
        } else if (selectedMethod === "select") {
            document.getElementById("uploadCVSection").style.display = "none";
            document.getElementById("selectHoSoSection").style.display = "block";
        }
    });
</script>
