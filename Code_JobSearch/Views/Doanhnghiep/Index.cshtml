@{
    ViewBag.Title = "Home";
    Layout = "~/Views/Shared/DoanhNghiepLayout.cshtml";
}
<header>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
</header>

<h2 class="text-center text-success mb-4">Thống kê</h2>

<div id="chartContainer" class="chart-container" style="height: 370px;"></div>

<div class="row mb-3" style="margin: 0 auto; max-width: 550px; " id="filterForm">
    <div class="col d-flex align-items-center">
        <label for="month" class="mr-2">Chọn tháng:</label>
        <select id="month" name="month" class="form-control mr-1">
            @for (int i = 1; i <= 12; i++)
            {
                <option value="@i">Tháng @i</option>
            }
        </select>
    </div>
    <div class="col d-flex align-items-center">
        <label for="year" class="mr-2">Chọn năm:</label>
        <select id="year" name="year" class="form-control mr-1">
            @for (int i = 1950; i <= DateTime.Now.Year + 125; i++)
            {
                <option value="@i">@i</option>
            }
        </select>
    </div>
    <div class="col d-flex align-items-center">
        <button id="filterButton" type="button" class="btn btn-icon btn-primary">
            Lọc <i class="bi bi-filter"></i>
        </button>
    </div>
</div>

<script>
    $(document).ready(function () {

        var today = new Date();
        var currentMonth = today.getMonth() + 1;
        var currentYear = today.getFullYear();

        $("#month").val(currentMonth);
        $("#year").val(currentYear);

        //// Sự kiện khi thay đổi dropdown "Chọn tháng" hoặc "Chọn năm"
        //$("#month, #year").change(function () {
        //    var selectedMonth = $("#month").val();
        //    var selectedYear = $("#year").val();
        //    filterChartData(selectedMonth, selectedYear);
        //});

        google.charts.load('current', {'packages':['corechart']});
        google.charts.setOnLoadCallback(init);

        function init() {
            loadChartData();
        }

        function loadChartData() {
            $.get("@Url.Action("FilterPosts")")
                .done(function (data) {
                    if (data.posts.length === 0 && data.candidates.length === 0 && data.passedCandidates.length === 0) {
                        $("#chartContainer").html('<div class="alert alert-warning" role="alert">Không có dữ liệu cho tháng và năm hiện tại.</div>');
                    } else {
                        var today = new Date();
                        drawColumnChart(data.posts, data.candidates, data.passedCandidates, today.getMonth() + 1, today.getFullYear());
                    }
                })
                .fail(function () {
                    $("#chartContainer").html('<div class="alert alert-danger" role="alert">Lỗi khi tải dữ liệu</div>');
                });
        }

        $("#filterButton").click(function () {
            var selectedMonth = $("#month").val();
            var selectedYear = $("#year").val();
            filterChartData(selectedMonth, selectedYear);
        });

        function filterChartData(selectedMonth, selectedYear) {
            $.get("@Url.Action("FilterPosts")", { month: selectedMonth, year: selectedYear })
                .done(function (data) {
                    if (data.posts.length === 0 && data.candidates.length === 0 && data.passedCandidates.length === 0) {
                        $("#chartContainer").html('<div class="alert alert-warning" role="alert">Không có dữ liệu cho tháng và năm đã chọn.</div>');
                    } else {
                        drawColumnChart(data.posts, data.candidates, data.passedCandidates, selectedMonth, selectedYear);
                    }
                })
                .fail(function () {
                    $("#chartContainer").html('<div class="alert alert-danger" role="alert">Lỗi khi tải dữ liệu</div>');
                });
        }

        function drawColumnChart(postData, candidateData, passedCandidateData, selectedMonth, selectedYear) {
            var data = new google.visualization.DataTable();
            data.addColumn('string', 'Ngày');
            data.addColumn({ type: 'string', role: 'tooltip', p: { html: true } });
            data.addColumn('number', 'Số tin xét duyệt thành công');
            data.addColumn('number', 'Số ứng viên ứng tuyển');
            data.addColumn('number', 'Số ứng viên đậu');

            var days = [...new Set([...postData.map(item => item.day), ...candidateData.map(item => item.day), ...passedCandidateData.map(item => item.day)])];
            days.sort((a, b) => a - b);

            days.forEach(function(day) {
                var postCount = postData.find(item => item.day == day)?.postCount || 0;
                var candidateCount = candidateData.find(item => item.day == day)?.candidateCount || 0;
                var passedCandidateCount = passedCandidateData.find(item => item.day == day)?.passedCandidateCount || 0;
                data.addRow([
                    day.toString(),
                    `Ngày ${day}`,
                    postCount,
                    candidateCount,
                    passedCandidateCount
                ]);
            });

            var options = {
                title: 'Biểu đồ tin tuyển dụng tháng ' + ('0' + selectedMonth).slice(-2) + '/' + selectedYear,
                hAxis: { title: 'Ngày' },
                vAxis: { title: 'Số lượng' },
                seriesType: 'bars',
                series: { 0: { color: 'green' }, 1: { color: 'red' }, 2: { color: 'blue' } },
                width: '100%',
                height: 370,
                tooltip: { isHtml: true }
            };

            var chart = new google.visualization.ComboChart(document.getElementById('chartContainer'));
            chart.draw(data, options);
        }
    });
</script>

<style>
    .chart-container {
        max-width: 800px;
        margin: 0 auto;
    }

    .form-inline {
        white-space: nowrap;
    }
</style>
